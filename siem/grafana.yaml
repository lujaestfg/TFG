apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: siem
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      initContainers:  # El init container permite arrancar el volumen y cambiar los permisos, si no grafana no podrá escribir. Otra alternativa menos remondable sería correr grafana como root
        - name: fix-permissions
          image: busybox
          command: ["sh", "-c", "chown -R 472:472 /var/lib/grafana"]
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
      containers:
        - name: grafana
          image: grafana/grafana:latest
          ports:
          - containerPort: 3000
          env:
          - name: GF_SECURITY_ADMIN_USER
            value: "admin"
          - name: GF_SECURITY_ADMIN_PASSWORD
            value: "admin"
          volumeMounts:
          - name: datasources
            mountPath: /etc/grafana/provisioning/datasources
          volumeMounts:
          - name: grafana-storage
            mountPath: /var/lib/grafana
      volumes:
      - name: datasources
        configMap:
          name: grafana-datasources
      - name: grafana-storage
        persistentVolumeClaim:
          claimName: grafana-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: siem
  annotations:
    service.antrea.io/external-ip-pool: "service-external-ip-pool"
spec:
  selector:
    app: grafana
  loadBalancerIP: "192.168.1.222"  
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3000
  type: LoadBalancer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: siem
  labels:
    grafana_datasource: "1"
data:
  loki-datasource.yaml: |
    apiVersion: 1
    datasources:
      - name: Loki
        type: loki
        access: proxy
        url: http://loki.siem.svc:3100
        isDefault: true
        jsonData:
          maxLines: 1000
