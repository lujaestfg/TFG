apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: suricata
  namespace: ids
spec:
  selector:
    matchLabels:
      app: suricata
  template:
    metadata:
      labels:
        app: suricata
      name: suricata
    spec:
      hostNetwork: true
      containers:
        - name: suricata
          image: jasonish/suricata:7.0.10
          command:
            - /usr/bin/suricata
            - -c
            - /etc/suricata/suricata.yaml
            - -i
            - tap0
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
                - SYS_NICE
          volumeMounts:
            - name: host-var-log-suricata
              mountPath: /var/log/suricata
            - name: suricata-config-volume
              mountPath: /etc/suricata/suricata.yaml
              subPath: suricata.yaml
              readOnly: true
            - name: suricata-config-volume
              mountPath: /etc/suricata/rules/classification.config
              subPath: classification.config
              readOnly: true
            - name: suricata-config-volume
              mountPath: /etc/suricata/rules/reference.config
              subPath: reference.config
              readOnly: true
            - name: suricata-config-volume
              mountPath: /etc/suricata/rules/threshold.config
              subPath: threshold.config
              readOnly: true
            - name: suricata-config-volume
              mountPath: /etc/suricata/rules/myrules.rules
              subPath: myrules.rules
              readOnly: true
      volumes:
        - name: host-var-log-suricata
          hostPath:
            path: /var/log/suricata
            type: DirectoryOrCreate
        - name: suricata-config-volume
          configMap:
            name: suricata-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: suricata-config
  namespace: ids
data:
  suricata.yaml: |
    %YAML 1.1
    ---
    vars:
      address-groups:
        HOME_NET: "[10.10.0.0/16]"
        EXTERNAL_NET: "!$HOME_NET"
    app-layer:
      protocols:
        http: 
          enabled: yes
          urldecode: yes
          double-decode: yes
    # CIDR usado en el cluster de Kubernetes para incluir cualquier direccion de un POD 
    default-rule-path: /etc/suricata/rules
    classification-file: /etc/suricata/rules/classification.config
    reference-config-file: /etc/suricata/rules/reference.config
    threshold-file: /etc/suricata/rules/threshold.config
    rule-files:
      - myrules.rules
    stats:
      enabled: no
    outputs:
      - eve-log:
          enabled: yes
          filetype: regular
          filename: /var/log/suricata/alertas.json
          types:
            - alert
    af-packet:
      - interface: tap0
        threads: auto
        cluster-id: 100
        cluster-type: cluster_flow
        defrag: yes
        use-mmap: yes
        ring-size: 100000
        block-size: 65536
        buffer-size: 16384
        tpacket-v3: yes
        use-emergency-flush: yes
    host-mode: sniffer-only
    runmode: workers
  myrules.rules: |
    #alert tcp any any -> any 3306 (msg:"¡Cuidado! Alguien esta accediendo a MYSQL"; sid:1000002; rev:1;)
    #alert http any any -> any any (msg:"General SQL Injection Attempt - ' OR '1'='1' in Password Detected"; flow:to_server, established; content:"POST"; http_method; content:"/index.php"; http_uri; content:"password="; http_client_body; content:"' OR '1'='1"; http_client_body; nocase; sid:1000004; rev:1; priority:1; reference:url,owasp.org/www-community/attacks/SQL_Injection;)

    # Detecta ataques MySQL
    alert http any any -> any any (msg:"[SQLi] Intento de escaneo con sqlmap detectado"; flow:to_server,established; content:"sqlmap"; http_user_agent; classtype:web-application-attack; sid:1001003; rev:1;)
    
    #alert http any any -> any any (msg:"SQLi Attempt: INSERT INTO en parámetro user de login"; flow:to_server,established; http.method; content:"POST"; http.uri; content:"/login"; http.client_body; pcre:"/user=[^&]*INSERT\\s+INTO/i"; nocase; classtype:web-application-attack; sid:1000001; rev:1;)
    #alert http any any -> any any (msg:"SQLi Attempt: ' OR 1=1 -- en parámetro user de login"; flow:to_server,established; http.method; content:"POST"; http.uri; content:"/login"; http.client_body; pcre:"/user=[^&]*'\s*OR\s+1\s*=\s*1\s*--/i"; nocase; classtype:web-application-attack; sid:1000002; rev:1;)
    
    #alert http any any -> any any (msg:"[SQLi] Posible SQL Injection (1' OR '1'='1'#) en username"; flow:to_server,established; content:"1' OR '1'='1'#"; nocase; http.request_body; classtype:web-application-attack; sid:1000021; rev:1;)


    # Detección de Log4J detectando cadena jdni:ldap:// en el contenido de la URL o en User Agent (incluir puertos de interes en detection ports en la sección protocols)
    alert http any any -> any any (msg:"[LOG4J] Posible intento de explotación Log4Shell en URL"; flow:to_server,established; http.method; content:"GET"; nocase; http.uri; content:"jndi:ldap://"; fast_pattern; pcre:"/\$\{jndi:ldap:\/\/[^}]+\}/i"; classtype:web-application-attack; sid:1000012; rev:2;)
    alert http any any -> any any (msg:"[LOG4J] Posible intento de explotación Log4Shell en User-Agent"; flow:to_server,established; http.header; content:"User-Agent|3a|"; nocase; content:"${jndi:ldap://"; nocase; content:".badreputation.com}"; nocase; classtype:web-application-attack; sid:1000013; rev:1;) 


  classification.config: |
    config classification: misc-activity,Misc activity,3
    config classification: attempted-admin,Attempted Administrator Privilege Gain,3
    config classification: icmp-event,ICMP Event,3
    config classification: network-scan,Network Scan,3
    config classification: web-application-attack,Web Application Attack,2

  reference.config: |
    # your own overrides…
    # then at least:
    config reference: url,"^[[:alnum:] ./%?&=#:_+-]+$"

  threshold.config: |
   #suppress gen_id 1, sig_id 1000002, track by_src, ip 10.244.0.11
   #threshold gen_id 1, sig_id 1000003, type limit, track by_src, count 5, seconds 60
       config reference: url,"^[[:alnum:] ./%?&=#:_+-]+$"