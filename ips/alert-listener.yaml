apiVersion: v1
kind: Service
metadata:
  name: alert-listener
  namespace: ids
  annotations:
      service.antrea.io/external-ip-pool: "service-external-ip-pool"
spec:
  selector:
    app: alert-listener
  loadBalancerIP: "192.168.1.224"
  ports:
    - port: 80
      targetPort: 5000
      protocol: TCP
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alert-listener
  namespace: ids
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alert-listener
  template:
    metadata:
      labels:
        app: alert-listener
    spec:
      securityContext:
        fsGroup: 1000
      containers:
      - name: alert-listener
        image: lujaestfg/alert-listener:1.41
        env:
        - name: IFRAME_URL
          value: "http://192.168.1.222/d/472d2be6-aae7-4d33-8ea5-607eedb660ff/ids-dashboard?orgId=1&from=now-6h&to=now&timezone=browser&theme=light&kiosk=tv"
        ports:
        - containerPort: 5000
        securityContext:
          runAsUser: 1000
          runAsNonRoot: true
        volumeMounts:
        - name: rules
          mountPath: /etc/ips
      volumes:
      - name: rules
        persistentVolumeClaim:
          claimName: alert-listener-rules-pvc
      serviceAccountName: alert-listener-sa
---
# rbac.yaml --> permisos necesarios para que la aplicci√≥n pueda listar pods de k8s y hacer cambios 
apiVersion: v1
kind: ServiceAccount
metadata:
  name: alert-listener-sa
  namespace: ids
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: alert-listener-role
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch", "patch"]
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: alert-listener-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: alert-listener-role
subjects:
  - kind: ServiceAccount
    name: alert-listener-sa
    namespace: ids
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: alert-listener-rules-pvc
  namespace: ids
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
  storageClassName: longhorn-retain # Storage class custom con persistencia de datos
